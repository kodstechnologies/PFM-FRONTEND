name: Deploy PFM Backend

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project (if needed)
        run: npm run build

      - name: Copy code to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "."
          target: "/home/ubuntu/PFM-BACKEND/"

      - name: Update .env on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cat > /home/ubuntu/PFM-BACKEND/.env <<EOL
PORT=8000
NODE_ENV=development
MONGODB_URI=${{ secrets.MONGODB_URI }}
MONGODB_DB_NAME=PFM
ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
ACCESS_TOKEN_VALIDATION_TIME=10d
REFRESH_TOKEN_VALIDATION_TIME=30d
FIREBASE_TYPE=${{ secrets.FIREBASE_TYPE }}
FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}
FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}
SENDER_ID=${{ secrets.SENDER_ID }}
TEMPLATE_ID=${{ secrets.TEMPLATE_ID }}
CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}
EOL

      - name: Restart PM2 on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/PFM-BACKEND
            pm2 restart pfm-backend || pm2 start server.js --name pfm-backend
            pm2 save
