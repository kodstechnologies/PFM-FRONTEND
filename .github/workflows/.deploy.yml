name: Deploy PFM Fullstack to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    env:
      # Backend secrets (available to backend)
      PORT: ${{ secrets.PORT }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      MONGODB_DB_NAME: ${{ secrets.MONGODB_DB_NAME }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
      ACCESS_TOKEN_VALIDATION_TIME: ${{ secrets.ACCESS_TOKEN_VALIDATION_TIME }}
      REFRESH_TOKEN_VALIDATION_TIME: ${{ secrets.REFRESH_TOKEN_VALIDATION_TIME }}
      FIREBASE_TYPE: ${{ secrets.FIREBASE_TYPE }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
      FIREBASE_AUTH_URI: ${{ secrets.FIREBASE_AUTH_URI }}
      FIREBASE_TOKEN_URI: ${{ secrets.FIREBASE_TOKEN_URI }}
      FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
      FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
      FIREBASE_UNIVERSE_DOMAIN: ${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}
      SENDER_ID: ${{ secrets.SENDER_ID }}
      TEMPLATE_ID: ${{ secrets.TEMPLATE_ID }}
      EMAIL_NAME: ${{ secrets.EMAIL_NAME }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

    steps:
      # 1️⃣ Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2️⃣ Set up Node.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # 3️⃣ Install dependencies
      - name: Install Dependencies
        run: npm ci

      # 4️⃣ Build frontend
      - name: Write Frontend .env
        run: |
          echo "${{ secrets.PFM_ENV }}" > .env
      - name: Build React frontend
        run: |
          NODE_OPTIONS="--max-old-space-size=3072" npm run build

      # 5️⃣ Deploy to EC2 via SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            # Navigate to your project folder on EC2
            cd ~/PFM-FULLSTACK || mkdir -p ~/PFM-FULLSTACK && cd ~/PFM-FULLSTACK

            # Pull latest backend code (or copy from Actions)
            # Option 1: Pull from GitHub
            git pull origin main

            # Copy frontend build from Actions runner
            rm -rf frontend/build
            cp -r $GITHUB_WORKSPACE/build frontend/build

            # Install backend dependencies
            npm ci

            # Restart backend with PM2
            pm2 delete pfm-backend || true
            pm2 start server.js --name pfm-backend --update-env

            # Serve frontend with PM2
            pm2 delete pfm-frontend || true
            pm2 serve frontend/build 80 --name pfm-frontend --watch

            pm2 save
